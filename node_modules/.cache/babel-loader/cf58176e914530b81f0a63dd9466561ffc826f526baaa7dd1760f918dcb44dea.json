{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tabassom Learning\\\\front-end\\\\react\\\\udemy\\\\05-starting-project\\\\src\\\\components\\\\FormInput\\\\FormInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = props => {\n  _s();\n  const [enteredData, setEnteredData] = useState({});\n  const calculateHandler = userInput => {\n    userInput.preventDefault();\n    console.log(userInput[\"current-savings\"]);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput.target[0].value; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    props.onSaveFormData(yearlyData);\n    console.log('hi');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: calculateHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"hgqHUl+LZYtUuEug+JFKR0O4x20=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FormInput","props","_s","enteredData","setEnteredData","calculateHandler","userInput","preventDefault","console","log","yearlyData","currentSavings","target","value","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","onSaveFormData","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","_c","$RefreshReg$"],"sources":["D:/Tabassom Learning/front-end/react/udemy/05-starting-project/src/components/FormInput/FormInput.js"],"sourcesContent":["import {useState} from 'react';\r\n\r\nconst FormInput = (props) => {\r\n\r\n  const [enteredData, setEnteredData] = useState({});\r\n\r\n  const calculateHandler = (userInput) => {\r\n    userInput.preventDefault();\r\n    console.log(userInput[\"current-savings\"]);\r\n    // Should be triggered when form is submitted\r\n    // You might not directly want to bind it to the submit event on the form though...\r\n\r\n    const yearlyData = []; // per-year results\r\n\r\n    let currentSavings = +userInput.target[0].value; // feel free to change the shape of this input object!\r\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\r\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\r\n    const duration = +userInput[\"duration\"];\r\n\r\n    // The below code calculates yearly results (total savings, interest etc)\r\n    for (let i = 0; i < duration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlyContribution;\r\n      yearlyData.push({\r\n        // feel free to change the shape of the data pushed to the array!\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlyContribution: yearlyContribution,\r\n      });\r\n    }\r\n    props.onSaveFormData(yearlyData);\r\n    console.log('hi')\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={calculateHandler}>\r\n      <div className=\"input-group\">\r\n        <p>\r\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n          <input type=\"number\" id=\"current-savings\" />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n          <input type=\"number\" id=\"yearly-contribution\" />\r\n        </p>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <p>\r\n          <label htmlFor=\"expected-return\">\r\n            Expected Interest (%, per year)\r\n          </label>\r\n          <input type=\"number\" id=\"expected-return\" />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n          <input type=\"number\" id=\"duration\" />\r\n        </p>\r\n      </div>\r\n      <p className=\"actions\">\r\n        <button type=\"reset\" className=\"buttonAlt\">\r\n          Reset\r\n        </button>\r\n        <button type=\"submit\" className=\"button\">\r\n          Calculate\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}